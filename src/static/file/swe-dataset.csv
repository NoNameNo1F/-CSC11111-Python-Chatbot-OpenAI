Question Number,Question,Answer,Category,Difficulty
1,What is the difference between compilation and interpretation?,Compilation translates source code into machine code creating an executable file. Interpretation translates and executes code line by line without an executable.,General Programming,Medium
2,Explain the concept of polymorphism.,"Polymorphism allows objects of different classes to be treated as objects of a common superclass, enabling method overriding.",General Programming,Medium
3,Define encapsulation and give an example.,"Encapsulation bundles data and methods in a class, restricting direct data access. Example: class with private data and public methods.",General Programming,Hard
4,"What is an abstract class, and how is it different from an interface?",An abstract class can't be instantiated and can have abstract and concrete methods. An interface only has method signatures without implementations.,General Programming,Medium
5,Describe the principles of Object-Oriented Programming (OOP).,"OOP principles include encapsulation, inheritance, polymorphism, and abstraction, promoting organized and maintainable code.",General Programming,Medium
6,What is the purpose of a constructor?,"A constructor initializes object properties upon class instantiation, ensuring a well-defined state.",General Programming,Medium
7,Explain the difference between stack and heap memory.,"Stack memory stores local variables and function calls; heap memory is for dynamic allocation. Stack operates in LIFO, heap managed manually or by garbage collection.",General Programming,Medium
8,"What is a design pattern, and can you name a few?","Design patterns are solutions to common design problems. Examples: Singleton, Factory, Observer, MVC.",General Programming,Medium
9,"Define the term ""DRY"" in software development.",DRY (Don't Repeat Yourself) advocates for avoiding code duplication by reusing existing code.,General Programming,Medium
10,What is the SOLID principle?,"SOLID represents five design principles for OOP: Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion.",General Program,Hard
11,What is the difference between an array and a linked list?,"An array has fixed size and stores elements in contiguous memory; a linked list consists of nodes with data and references, allowing dynamic size.",Data Structures,Easy
12,Explain the time complexity of an algorithm.,"Time complexity measures the time an algorithm takes relative to its input size, expressed in Big O notation.",Data Structures,Hard
13,Describe the difference between a binary search tree and a hash table.,"A binary search tree is hierarchical, maintaining order; a hash table maps keys to values for fast retrieval, without maintaining order.",Data Structures,Medium
14,What is a linked list and how does it work?,"A linked list is a series of nodes each containing data and a reference to the next node, allowing dynamic memory allocation and efficient insertions/deletions.",Data Structures,Medium
15,Explain the concept of recursion.,"Recursion is when a function calls itself to solve subproblems, with a base case to terminate recursion.",Data Structures,Medium
16,"What is Big O notation, and why is it important?","Big O notation describes the upper bound of algorithm time complexity, important for comparing efficiency and growth rates.",Data Structures,Medium
17,How do you perform a binary search on a sorted array?,"Binary search divides the search interval in half, repeatedly comparing the middle element to the target.",Data Structures,Hard
18,Discuss the advantages and disadvantages of different sorting algorithms.,Sorting algorithms vary in time/space complexity and stability. Quick Sort and Merge Sort are fast but more complex; Insertion and Bubble Sort are simple but slower.,Data Structures,Medium
19,Describe the MVC architectural pattern.,"MVC divides an application into Model (data), View (UI), and Controller (input handling), promoting separation of concerns.",Languages and Frameworks,Medium
20,What is a RESTful API?,"RESTful API is a web service implementation using HTTP methods to perform CRUD operations on resources, adhering to stateless, client-server architecture.",Languages and Frameworks,Medium
21,Explain the differences between SQL and NoSQL databases.,SQL databases use structured query language with a predefined schema; NoSQL databases store schema-less data with flexible models.,Back-end,Medium
22,Describe the purpose of a web server like Apache or Nginx.,"Web servers handle HTTP requests, serve content, manage security, routing, and can act as reverse proxies for application servers.",Web Development,Medium
23,"What is a cookie, and how does it work?","Cookies are data stored on the user's computer by the web server, sent with HTTP requests for session management, tracking, and storing preferences.",Web Development,Hard
24,What is a session in web development?,"A session maintains stateful information across multiple HTTP requests, typically for user authentication and data storage.",Web Development,Medium
25,Explain the difference between Git and SVN (Subversion).,"Git is distributed, with local repository copies; SVN is centralized, requiring network connectivity for repository access.",Version Control,Hard
26,What are microservices and how do they differ from monolithic architectures?,"Microservices are a software development techniqueï¿½a variant of the service-oriented architecture architectural style that structures an application as a collection of loosely coupled services. In a monolithic architecture, all components are interconnected and interdependent.",Back-end,Hard
27,Describe how you would implement a RESTful API in a back-end application.,"A RESTful API is implemented by setting up HTTP routes (GET, POST, PUT, DELETE) and handling requests and responses in a stateless manner, often using JSON.",Back-end,Medium
28,How do NoSQL databases handle data scaling compared to traditional SQL databases?,NoSQL databases are generally more scalable and provide superior performance for large-scale applications due to their flexibility in handling unstructured data.,Back-end,Medium
29,What are the advantages of using a microservices architecture?,"Advantages include easier scalability, flexibility in choosing technology, better fault isolation, and improved continuous deployment.",Back-end,Medium
